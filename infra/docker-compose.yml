services:
  auth_service_db:
    container_name: auth_service_db
    environment:
      POSTGRES_DB: db
      POSTGRES_PASSWORD: password
      POSTGRES_USER: admin_user
    image: postgres:latest
    pull_policy: if_not_present
    networks:
      - internal
    ports:
      - 5001:5432
    volumes:
      - type: bind
        source: pgdata-auth
        target: /var/lib/postgresql/data
        bind: 
          create_host_path: true
  kafka:
    container_name: kafka
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
    image: bitnami/kafka
    pull_policy: if_not_present
    ports:
      - 9092:9092
      - 9094:9094
    networks:
      - internal

  elasticsearch:
    container_name: elasticsearch
    image: bitnami/elasticsearch
    pull_policy: if_not_present
    ports:
      - 9200:9200
    networks:
      - internal
  logstash:
    container_name: logstash
    image: bitnami/logstash
    volumes:
      - ./logstash/logstash.conf:/opt/bitnami/logstash/pipeline/logstash.conf
    ports:
      - 5000:5000
    networks:
      - internal
  kibana:
    container_name: kibana
    image: bitnami/kibana
    pull_policy: if_not_present
    ports:
      - 5601:5601
    networks:
      - internal

networks:
  internal:
    name: internal
    driver: bridge

volumes:
  logstash-data:
    name: logstash-data
      - ./logstash/logstash.conf

      
